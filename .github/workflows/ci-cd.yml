name: .NET CI/CD

# Restaurar pacotes NuGet
# Compilar a solution
# Rodar os testes (FastTech.Tests)
# Publicar (deploy, se desejar)
# O deploy pode ser configurado depois (para Azure, AWS, Docker Hub, etc.)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
     

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v3
  
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dos pacotes NuGet
        run: dotnet restore FastTech.sln

      - name: Build da solução
        run: dotnet build FastTech.sln --configuration Release --no-restore

      - name: Rodar testes
        run: dotnet test tests/FastTech.Tests/FastTech.Tests.csproj --configuration Release --no-build --verbosity normal

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fasttech-api:latest -f FastTechCore/src/FastTech.Api/Dockerfile .

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push da imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fasttech-api:latest
      
      # - name: Restore dependencies
      #   run: dotnet restore
      # - name: Build
      #   run: dotnet build --no-restore
      # - name: Test
      #   run: dotnet test --no-build --verbosity normal
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Publish Docker Image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/mpcalchub-personal:latest

  # deploy:
  #   runs-on: self-hosted
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Atualizar arquivos do Kubernetes
  #       run: |
  #         kubectl apply -f ./src/k8s/deployment.yaml
  #         kubectl apply -f ./src/k8s/service.yaml
